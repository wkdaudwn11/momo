<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.momo.MemberMapper">

	<!-- 로그인날짜 수정 -->
   	<update id="updateLoginDate" parameterType="string">
   		update member set logindate = sysdate where id=#{value}
   	</update>

	<!-- 로그인할 때 회원정보를 MemberDTO으로 반환해주는 쿼리 -->
   	<select id="loginCheck" parameterType="hashmap" resultType="MemberDTO">
		select * from member where id = #{id} and pwd = #{pwd}
   	</select>
   	
   	<!-- sns 아이디(고유번호)가 이미 member테이블에 존재하는지 체크하는 쿼리 -->
   	<select id="SNSMemberCheck" parameterType="string" resultType="int">
   		select count(*) from member where id = #{id}
   	</select>
   	
   	<!-- sns 정보를 member 테이블에 저장 -->
   	<insert id="addSNSMember" parameterType="hashmap">
   		insert into member(mnum, name, id, pwd, pwd2, gender, tel, question, answer, post1, post2, addr1, addr2, sns)
   		values(member_seq.nextval, #{name}, #{id}, 'sns', 'sns', 'sns', 01012341234, 'sns', 'sns',
   				'123', '123', 'sns', 'sns', #{sns})
   	</insert>
   	
   	<!-- sns로 로그인 했을 때, 테이블에 저장되어 있던 정보를 반환하는 쿼리 -->
   	<select id="SNSLogin" parameterType="string" resultType="MemberDTO">
		select * 
		  from member 
		 where id = #{value}
   	</select>
   	
   	<!-- 회원가입할 때 아이디 중복검사를 하기 위한 쿼리 -->
   	<select id="idCheck" parameterType="string" resultType="int">
 		select count(*) from member where id = #{userid}
 	</select>
 	
 	<!-- 회원가입 쿼리 -->
 	<select id="addMember" parameterType="memberDTO"  >
		insert into member(mnum, name, id, pwd, pwd2, gender, tel, email, question, answer, post1, post2, addr1, addr2)
		values(member_seq.nextval, #{name}, #{id}, #{pwd}, #{pwd2}, #{gender}, #{tel}, #{email}, #{question}, #{answer}, #{post1},
							 #{post2}, #{addr1}, #{addr2})
	</select>
	
	<!-- 아이디 찾기  -->
	<select id="FindMemberId" parameterType="hashmap" resultType="MemberDTO">
		
		select * from member where name=#{name} and question=#{question} and answer=#{answer}
   			
   	</select>
   	<select id="FindMemberIdTel" parameterType="hashmap" resultType="MemberDTO">
		
   		select * from member where name=#{name} and tel=#{tel} 
   		
   	</select>
   	<select id="FindMemberIdEmail" parameterType="hashmap" resultType="MemberDTO">
		
   		select * from member where name=#{name} and email=#{email} 
   	
   	</select>
	<!-- 비밀번호 찾기 -->
	<select id="FindMemberPwd" parameterType="hashmap" resultType="MemberDTO">
		select * from member where id=#{userid} and question=#{question} and answer=#{answer} 
   	</select>
   	<select id="FindMemberPwdTel" parameterType="hashmap" resultType="MemberDTO">
		select * from member where id=#{userid} and question=#{question}  
   	</select>
   	<select id="FindMemberPwdEmail" parameterType="hashmap" resultType="MemberDTO">
		select * from member where id=#{userid} and tel=#{tel}
   	</select>
   	<!-- sns 유저가 주문을 할 때, 입력한 배송지 정보를 회원 정보에 등록할 때 update해주는 쿼리 -->
   	<update id="updateSNSMemberAddr" parameterType="hashmap">
   		update member 
   		   set tel=#{tel}, post1=#{post1}, post2=#{post2}, addr1=#{addr1}, addr2=#{addr2}
   		 where id=#{id}
   	</update>
   	
</mapper>