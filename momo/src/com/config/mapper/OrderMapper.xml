<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.momo.OrderMapper">

	<!-- orderList 받아서 주문상품 정보 찾아주는 쿼리  -->
	<select id="detailOrderList" resultType="OrderDTO" parameterType="list">
		select * from orderinfo
		where onum in
		<foreach item="orderNum" collection="array" open="(" separator="," close=")">
			#{orderNum}
		</foreach>
	</select> 
	
	<!-- 장바구니에서 체크된 물품들의 정보를 가져오는 쿼리 -->
	<select id="cartList" parameterType="arraylist" resultType="CartDTO"> 
		select cnum, pnum, category, id, name, count, price, discount, to_char(cartdate, 'YYYY-MM-dd') cartdate, image1
		  from cart 
		<where> cnum IN 
			<foreach item="xxx" index="i" collection="list" open="(" separator="," close=")"> 
				#{xxx} 
			</foreach> 
		</where> 
	</select>
	
	<!-- 장바구니에서 여러개를 구매할 때 사용되는 쿼리 -->
	<insert id="orderInsertAll" parameterType="hashmap">
		insert into orderInfo(onum, groupnum, id, pnum, category, pname, count, price, discount, orderdate,
								image1, orderMessage, orderstate, equalGroupCount, equalGroupTotalPrice, equalGroupTotalCount)
		values(orderInfo_seq.nextval, orderInfo_groupseq.currval, #{id}, #{pnum}, #{category}, #{pname}, 
				#{count}, #{price}, #{discount}, sysdate, #{image1}, '메세지', '입금대기중', 
				#{equalGroupCount}, #{equalGroupTotalPrice}, #{equalGroupTotalCount})
	</insert>
	
	<!-- 즉시구매로 한개를 구매할 때 사용되는 쿼리 -->
	<insert id="orderInsertOne" parameterType="hashmap">
		insert into orderInfo(onum, groupnum, id, pnum, category, pname, count, price, discount, orderdate,
								image1, orderMessage, orderstate, equalGroupCount)
		values(orderInfo_seq.nextval, orderInfo_groupseq.currval, #{id}, #{pnum}, #{category}, #{pname}, 
					#{count}, #{price}, #{discount}, sysdate, #{image1}, #{orderMessage}, '입금대기중', 1)
	</insert>
	
	<!-- 그룹번호를 증가시켜주는 쿼리 -->
	<select id="seqNextVal" resultType="int">
		select orderInfo_groupseq.nextval from dual
	</select>
	
	<!-- myHome 의 주문내역 가져오기 -->
	<select id="myHomeOrderList" resultType="OrderDTO" parameterType="String">
		select * from orderInfo 
		where id=#{id} and orderState = '배송완료'
		order by GROUPNUM desc, onum desc
	</select>
	
	<!-- 해당 아이디의 주문내역을 가져오는 쿼리 -->
	<select id="orderList" parameterType="String" resultType="OrderDTO">
		select * from orderInfo 
		where id=#{id} 
		order by GROUPNUM desc, onum desc
	</select>
	
	<!-- 해당 아이디의 주문내역 총 갯수를 가져오는 쿼리 -->
	<select id="totalRecord" parameterType="string" resultType="int">
		select count(*) from orderInfo where id = #{value}
	</select>
	
	<!-- 해당 id의 groupnum 중복값을 제거한 주문내역 총 갯수를 반환해주는 쿼리 -->
	<select id="totalRecordDistinct" parameterType="string" resultType="int">
		select count(DISTINCT groupnum) from orderInfo where id = #{value}
	</select>
	
	<!-- 장바구니에서 해당 상품을 삭제하는 쿼리 -->
	<delete id="deleteOne" parameterType="int">
		delete from orderInfo where groupnum=#{groupnum}
	</delete>
	
	<!-- 장바구니에서 체크 된 상품들을 삭제하는 쿼리 -->
	<delete id="deleteCheck" parameterType="arraylist">
		delete from orderInfo
		<where>
			<foreach item="x" index="i" collection="list">
				or groupnum = #{x}
			</foreach>
		</where>
	</delete>
	
	<!-- 해당 그룹번호의 상품들을 갯수를 가져오는 쿼리 -->
	<select id="orderEqualGroupCount" parameterType="int" resultType="int">
		select count(*) from orderInfo where groupnum=#{groupnum}
	</select>

</mapper>